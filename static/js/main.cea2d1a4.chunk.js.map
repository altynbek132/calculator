{"version":3,"sources":["serviceWorker.js","components/Screen/Screen.js","components/UI/Button/Button.js","components/UI/Button/index.js","components/Grid/Grid.js","store/actions/calculator.js","components/App/index.js","components/App/App.js","store/reducers/calculator.js","store/reducers/rootReducer.js","index.js","middlewares/index.js"],"names":["Boolean","window","location","hostname","match","Screen","result","className","defaultProps","connect","calculator","screen","Button","onClick","children","type","isDisabled","cls","join","disabled","state","mapKeyboardToActions","Enter","Del","Backspace","Grid","calc","map","value","style","flexBasis","key","handleKeys","onKeyEvent","e","console","log","hasOwnProperty","mapDispatchToProps","payload","num","Number","isNaN","App","initialState","left","right","operator","active","mathMap","a","b","x","normalizeNum","number","String","combineReducers","newNumber","includes","slice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","next","action","thunk","getState","app","ReactDOM","render","StrictMode","document","getElementById","dispatch","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cea2d1a4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './Screen.scss';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Screen = ({ result }) => {\n  return (\n    <div className=\"Screen\">\n      <div className=\"number\">{result}</div>\n    </div>\n  );\n};\n\nScreen.propTypes = {};\n\nScreen.defaultProps = {};\n\nconst mapStateToProps = ({ calculator }) => {\n  return { result: calculator[calculator.screen] };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Screen);\n","import './Button.scss';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Button = ({ onClick, children, type = 'primary', isDisabled }) => {\n  const cls = ['Button', type];\n  return (\n    <button className={cls.join(' ')} onClick={onClick} disabled={isDisabled}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {};\n\nButton.defaultProps = {};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);\n","import Button from './Button.js';\nexport default Button;","import './Grid.scss';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '../UI/Button';\nimport { calc } from '../../store/actions/calculator';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nconst mapKeyboardToActions = {\n  Enter: '=',\n  Del: 'AC',\n  Backspace: 'BS',\n};\n\nconst Grid = ({ calc }) => {\n  const buttons = ['AC', '+/-', '%', '/', 7, 8, 9, 'x', 4, 5, 6, '-', 1, 2, 3, '+', 0, '.', '='];\n  return (\n    <div className=\"Grid\">\n      {buttons.map((value) => {\n        const style = value === 0 ? { flexBasis: '50%' } : {};\n        return (\n          <div className=\"button-wrapper\" style={style} key={value}>\n            <Button onClick={() => calc(value)}>{value}</Button>\n          </div>\n        );\n      })}\n      <KeyboardEventHandler\n        handleKeys={['numeric', '*', '-', '+', '.', '/', 'Enter', 'Del', 'Backspace']}\n        onKeyEvent={(key, e) => {\n          console.log('key - ', key);\n          if (mapKeyboardToActions.hasOwnProperty(key)) {\n            calc(mapKeyboardToActions[key]);\n            return;\n          }\n          calc(key);\n        }}\n      />\n    </div>\n  );\n};\n\nGrid.propTypes = {};\n\nGrid.defaultProps = {};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = { calc };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n","export const calc = (payload) => {\n  const num = Number(payload);\n  if (!Number.isNaN(num)) return { type: 'number', payload };\n\n  return {\n    type: payload,\n  };\n};\n","import App from './App.js';\nexport default App;","import './App.scss';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Screen from '../Screen/Screen';\nimport Grid from '../Grid/Grid';\n\nconst App = ({}) => {\n  return (\n    <main>\n      <div className=\"App\">\n        <Screen />\n        <Grid />\n      </div>\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// 123 + 456\n// left  right, screen = 'right'\nconst initialState = {\n  left: '0',\n  right: '0',\n  result: '0',\n  operator: null,\n  active: 'left',\n  screen: 'left',\n};\n\nconst mathMap = {\n  '%': (a, b) => a % b,\n  '/': (a, b) => a / b,\n  x: (a, b) => a * b,\n  '*': (a, b) => a * b,\n  '-': (a, b) => a + b,\n  '+': (a, b) => a + b,\n};\n\nconst normalizeNum = (number) => String(Number(number));\n\nexport default (state = initialState, { type, payload }) => {\n  const { left, right, operator, active, screen } = state;\n\n  if (mathMap.hasOwnProperty(type)) {\n    if (operator) {\n      const result = mathMap[operator](Number(left), Number(right));\n      return {\n        ...state,\n        result: String(result),\n        left: String(result),\n        right: '0',\n        active: 'right',\n        operator: type,\n        screen: 'left',\n      };\n    }\n    return { ...state, operator: type, active: 'right', screen: 'left' };\n  }\n\n  switch (type) {\n    case 'AC':\n      return initialState;\n    case '+/-':\n      return { ...state, [active]: String(-Number(state[active])) };\n    case '=':\n      const result = operator ? mathMap[operator](Number(left), Number(right)) : left;\n      return {\n        ...state,\n        result,\n        left: result,\n        right: '0',\n        active: 'left',\n        screen: 'result',\n        operator: null,\n      };\n    case '.': {\n      const newNumber = state[active].includes('.') ? state[active] : `${state[active]}.`;\n      return { ...state, [active]: newNumber };\n    }\n    case 'number': {\n      const newNumber = screen === 'result' ? String(payload) : `${state[active]}${payload}`;\n      return { ...state, [active]: normalizeNum(newNumber), screen: active };\n    }\n    case 'BS': {\n      const newNumber = state[active].slice(0, -1);\n      return { ...state, [active]: normalizeNum(newNumber), screen: active };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport calculator from './calculator';\n\nexport default combineReducers({ calculator });\n","import './scss/_includes.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { logMiddleware, stringMiddleware } from './middlewares/index';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(stringMiddleware, thunk, logMiddleware)),\n);\n\nconst app = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<React.StrictMode>{app}</React.StrictMode>, document.getElementById('root'));\n\nstore.dispatch('hello, I am string action');\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const logMiddleware = ({ getState }) => (next) => (action) => {\n  // store with only getState and dispatch\n  console.log('action - logMiddlware', action);\n  console.log('getState() - logMiddlware', getState());\n\n  return next(action);\n};\n\nexport const stringMiddleware = () => (next) => (action) => {\n  if (typeof action === 'string') return next({ type: action });\n  return next(action);\n};\n"],"sourceRoot":""}